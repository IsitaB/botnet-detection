# -*- coding: utf-8 -*-
"""modely.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/176azP_ZymfLujPuZrHi-sq15rmz_sD6s
"""

import pandas as pd
import numpy as np
import keras
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

from google.colab import drive
drive.mount('/content/drive')

path="/content/drive/MyDrive/data/UDPLag.csv"
#csv reader here instead of pandas
#later on take equal # of data from each csv to train
df = pd.read_csv(path)
df.head()
df.drop("Flow Bytes/s", axis=1, inplace=True)

#pd.set_option('display.max_rows', None)
df.isnull().any()

x = df.iloc[:,8:10].values
y = df.iloc[:,10].values
x = np.asarray(x)
y = np.asarray(y)

print(x)

x_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2, random_state = 0)

sc = StandardScaler()

df = df.reset_index()
x_train = sc.fit_transform(x_train)
x_test = sc.transform(x_test)

bclfr = Sequential ()

bclfr.add(Dense(units = 2, kernel_initializer = 'uniform', activation = 'relu', input_dim = len(x_test[1])))

bclfr.add(Dense(units = 2, kernel_initializer = 'uniform', activation = 'relu'))

bclfr.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))

bclfr.compile(optimizer = 'adam' , loss = 'binary_crossentropy',metrics = ['accuracy'])

bclfr.fit(x_train,y_train,batch_size = 10 , epochs = 10)

y_pred = bclfr.predict(x_test)